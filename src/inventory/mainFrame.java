/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package inventory;

import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import static javax.swing.JOptionPane.ERROR_MESSAGE;
import static javax.swing.JOptionPane.INFORMATION_MESSAGE;

/**
 *
 * @author REFİK
 */
public class mainFrame extends javax.swing.JFrame {

    /**
     * Creates new form mainFrame
     */
    public mainFrame() {
        initComponents();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        productTypeField = new javax.swing.JTextField();
        modelNoField = new javax.swing.JTextField();
        productConditionField = new javax.swing.JTextField();
        searchWithProductType = new javax.swing.JButton();
        searchWithModelNumber = new javax.swing.JButton();
        searchwithProductCondition = new javax.swing.JButton();
        addProduct = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        productNameField = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        searchWithProductName = new javax.swing.JButton();
        removeProduct = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        listAll = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Ürün Çeşidi");

        jLabel2.setText("Model Numarası");

        jLabel3.setText("Ürün Durumu");

        searchWithProductType.setText("Ürün Çeşidine Göre Ara");
        searchWithProductType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchWithProductTypeActionPerformed(evt);
            }
        });

        searchWithModelNumber.setText("Model Numarasına Göre Ara");
        searchWithModelNumber.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchWithModelNumberActionPerformed(evt);
            }
        });

        searchwithProductCondition.setText("Ürün Durumuna Göre Ara");
        searchwithProductCondition.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchwithProductConditionActionPerformed(evt);
            }
        });

        addProduct.setText("Ürün Ekle");
        addProduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addProductActionPerformed(evt);
            }
        });

        jLabel4.setText("Version: Host");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Ürün Adı", "Ürün Çeşidi", "Model Numarası", "Durumu"
            }
        ));
        jTable1.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jTable1.setEnabled(false);
        jScrollPane1.setViewportView(jTable1);

        jLabel5.setText("Ürün Adı");

        searchWithProductName.setText("Ürün Adına Göre Ara");
        searchWithProductName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchWithProductNameActionPerformed(evt);
            }
        });

        removeProduct.setText("Ürün Sil");
        removeProduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeProductActionPerformed(evt);
            }
        });

        jLabel6.setText("Refik URHAN");

        listAll.setText("Bütün Ürünleri Listele");
        listAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listAllActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(removeProduct, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(addProduct, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(searchwithProductCondition, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel5))
                                .addGap(34, 34, 34))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(18, 18, 18)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(modelNoField, javax.swing.GroupLayout.DEFAULT_SIZE, 149, Short.MAX_VALUE)
                            .addComponent(productTypeField)
                            .addComponent(productConditionField)
                            .addComponent(productNameField)))
                    .addComponent(searchWithProductType, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(searchWithModelNumber, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(searchWithProductName, javax.swing.GroupLayout.PREFERRED_SIZE, 271, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 370, Short.MAX_VALUE)
                    .addComponent(listAll, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel6))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(productNameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(productTypeField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(modelNoField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(productConditionField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addGap(38, 38, 38)
                        .addComponent(searchWithProductName)
                        .addGap(18, 18, 18)
                        .addComponent(searchWithProductType)
                        .addGap(18, 18, 18)
                        .addComponent(searchWithModelNumber)
                        .addGap(18, 18, 18)
                        .addComponent(searchwithProductCondition)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(addProduct)
                            .addComponent(listAll))
                        .addGap(18, 18, 18)
                        .addComponent(removeProduct)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(jLabel6)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addGap(167, 167, 167))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void searchWithProductTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchWithProductTypeActionPerformed
        // TODO add your handling code here:
        jTable1 = TableModifier.clearTable(jTable1);
        if (productTypeField.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(this, "Lütfen ürün çeşidini giriniz.", "Hata", ERROR_MESSAGE);
        }
        try {

            Statement stmt = DatabaseConnector.GetConnection().createStatement();

            ResultSet rs = stmt.executeQuery("SELECT * FROM ENVANTER WHERE URUNCESIDI='" + productTypeField.getText() + "'");

            if (!rs.next()) {

                JOptionPane.showMessageDialog(this, "Aradığınız veri bulunamadı", "Hata", ERROR_MESSAGE);
            } else {
                rs = stmt.executeQuery("SELECT * FROM ENVANTER WHERE URUNCESIDI='" + productTypeField.getText() + "'");
                jTable1 = TableModifier.setTable(rs, jTable1);

                productNameField.setText("");
                productTypeField.setText("");
                modelNoField.setText("");
                productConditionField.setText("");

            }

        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(mainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }


    }//GEN-LAST:event_searchWithProductTypeActionPerformed

    private void searchWithProductNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchWithProductNameActionPerformed

        jTable1 = TableModifier.clearTable(jTable1);
        if (productNameField.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(this, "Lütfen ürün adını giriniz", "HATA", ERROR_MESSAGE);
        } else {
            try {
                // TODO add your handling code here:
                Statement stmt = DatabaseConnector.GetConnection().createStatement();

                ResultSet rs = stmt.executeQuery("SELECT * FROM ENVANTER WHERE URUNADI='" + productNameField.getText() + "'");

                if (!rs.next()) {
                    JOptionPane.showMessageDialog(this, "Aradığınız ürün bulunamadı", "Hata", ERROR_MESSAGE);
                } else {
                    rs = stmt.executeQuery("SELECT * FROM ENVANTER WHERE URUNADI='" + productNameField.getText() + "'");
                    jTable1 = TableModifier.setTable(rs, jTable1);

                    productNameField.setText("");
                    productTypeField.setText("");
                    modelNoField.setText("");
                    productConditionField.setText("");
                }
            } catch (ClassNotFoundException | SQLException ex) {
                Logger.getLogger(mainFrame.class.getName()).log(Level.SEVERE, null, ex);
            }

        }


    }//GEN-LAST:event_searchWithProductNameActionPerformed

    private void searchWithModelNumberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchWithModelNumberActionPerformed
        // TODO add your handling code here:
        jTable1 = TableModifier.clearTable(jTable1);
        if (modelNoField.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(this, "Lütfen model numarasını giriniz", "Hata", ERROR_MESSAGE);
        } else {
            try {
                Statement stmt = DatabaseConnector.GetConnection().createStatement();

                ResultSet rs = stmt.executeQuery("SELECT * FROM ENVANTER WHERE MODELNO='" + modelNoField.getText() + "'");

                if (!rs.next()) {
                    JOptionPane.showMessageDialog(this, "Aradığınız veri bulunamadı", "Hata", ERROR_MESSAGE);
                } else {
                    rs = stmt.executeQuery("SELECT * FROM ENVANTER WHERE MODELNO='" + modelNoField.getText() + "'");
                    jTable1 = TableModifier.setTable(rs, jTable1);

                    productNameField.setText("");
                    productTypeField.setText("");
                    modelNoField.setText("");
                    productConditionField.setText("");
                }
            } catch (ClassNotFoundException | SQLException ex) {
                Logger.getLogger(mainFrame.class.getName()).log(Level.SEVERE, null, ex);
            }

        }


    }//GEN-LAST:event_searchWithModelNumberActionPerformed

    private void searchwithProductConditionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchwithProductConditionActionPerformed
        // TODO add your handling code here:
        jTable1 = TableModifier.clearTable(jTable1);
        if (productConditionField.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(this, "Lütfen ürün durumunu giriniz", "Hata", ERROR_MESSAGE);
        } else {
            try {
                Statement stmt = DatabaseConnector.GetConnection().createStatement();

                ResultSet rs = stmt.executeQuery("SELECT * FROM ENVANTER WHERE DURUM='" + productConditionField.getText() + "'");

                if (!rs.next()) {
                    JOptionPane.showMessageDialog(this, "Aradığınız veri bulunamadı", "Hata", ERROR_MESSAGE);
                } else {
                    rs = stmt.executeQuery("SELECT * FROM ENVANTER WHERE DURUM='" + productConditionField.getText() + "'");
                    jTable1 = TableModifier.setTable(rs, jTable1);

                    productNameField.setText("");
                    productTypeField.setText("");
                    modelNoField.setText("");
                    productConditionField.setText("");
                }
            } catch (ClassNotFoundException | SQLException ex) {
                Logger.getLogger(mainFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_searchwithProductConditionActionPerformed

    private void listAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listAllActionPerformed

        jTable1 = TableModifier.clearTable(jTable1);

        try {
            // TODO add your handling code here:
            Statement stmt = DatabaseConnector.GetConnection().createStatement();

            ResultSet rs = stmt.executeQuery("SELECT * FROM ENVANTER");

            if (!rs.next()) {
                JOptionPane.showMessageDialog(this, "Veritabanında veri yok.", "Hata", ERROR_MESSAGE);
            } else {
                rs = stmt.executeQuery("SELECT * FROM ENVANTER");
                jTable1 = TableModifier.setTable(rs, jTable1);

                productNameField.setText("");
                productTypeField.setText("");
                modelNoField.setText("");
                productConditionField.setText("");
            }
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(mainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }


    }//GEN-LAST:event_listAllActionPerformed

    private void addProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addProductActionPerformed
        // TODO add your handling code here:

        jTable1 = TableModifier.clearTable(jTable1);

        if (productNameField.getText().trim().equals("") || productTypeField.getText().trim().equals("") || modelNoField.getText().trim().equals("") || productConditionField.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(this, "Eksik bilgi var. Lütfen boş alanların hepsini doldurunuz.", "Hata", ERROR_MESSAGE);
        } else {
            try {
                Statement stmt = DatabaseConnector.GetConnection().createStatement();

                ResultSet rs = stmt.executeQuery("SELECT * FROM ENVANTER WHERE MODELNO='" + modelNoField.getText() + "'");

                if (rs.next()) {
                    JOptionPane.showMessageDialog(this, "Veritabanında olan bir veriyi tekrar ekleyemezsiniz.", "Hata", ERROR_MESSAGE);
                } else {
                    stmt.executeUpdate("INSERT INTO ENVANTER (URUNADI,URUNCESIDI,MODELNO,DURUM) VALUES ('" + productNameField.getText() + "','" + productTypeField.getText() + "','" + modelNoField.getText() + "','" + productConditionField.getText() + "')");

                    JOptionPane.showMessageDialog(this, "Veri başarıyla eklendi.", "İşlem Başarılı", INFORMATION_MESSAGE);

                    productNameField.setText("");
                    productTypeField.setText("");
                    modelNoField.setText("");
                    productConditionField.setText("");
                }

            } catch (ClassNotFoundException | SQLException ex) {
                Logger.getLogger(mainFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

    }//GEN-LAST:event_addProductActionPerformed

    private void removeProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeProductActionPerformed
        // TODO add your handling code here:
        jTable1 = TableModifier.clearTable(jTable1);

        if (productNameField.getText().trim().equals("") || productTypeField.getText().trim().equals("") || modelNoField.getText().trim().equals("") || productConditionField.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(this, "Eksik bilgi var. Lütfen boş alanların hepsini doldurunuz.", "Hata", ERROR_MESSAGE);
        } else {
            try {
                Statement stmt = DatabaseConnector.GetConnection().createStatement();

                ResultSet rs = stmt.executeQuery("SELECT * FROM ENVANTER WHERE MODELNO='" + modelNoField.getText() + "'");

                if (rs.next()) {
                    jTable1 = TableModifier.setTable(rs, jTable1);

                    stmt.executeUpdate("DELETE * FROM ENVANTER WHERE MODELNO='" + modelNoField.getText() + "'");

                    JOptionPane.showMessageDialog(this, "Tablodaki ürün silindi.", "İşlem Başarılı", INFORMATION_MESSAGE);

                    productNameField.setText("");
                    productTypeField.setText("");
                    modelNoField.setText("");
                    productConditionField.setText("");
                } else {
                    JOptionPane.showMessageDialog(this, "Aradığınız ürün bulunamadı. Lütfen bilgileri kontrol ediniz.", "Hata", ERROR_MESSAGE);
                }

            } catch (ClassNotFoundException | SQLException ex) {
                Logger.getLogger(mainFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
    }//GEN-LAST:event_removeProductActionPerformed
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(mainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(mainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(mainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(mainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new mainFrame().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addProduct;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JButton listAll;
    private javax.swing.JTextField modelNoField;
    private javax.swing.JTextField productConditionField;
    private javax.swing.JTextField productNameField;
    private javax.swing.JTextField productTypeField;
    private javax.swing.JButton removeProduct;
    private javax.swing.JButton searchWithModelNumber;
    private javax.swing.JButton searchWithProductName;
    private javax.swing.JButton searchWithProductType;
    private javax.swing.JButton searchwithProductCondition;
    // End of variables declaration//GEN-END:variables
}
